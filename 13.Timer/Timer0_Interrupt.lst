;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 18-08-2019 02:07:52
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x282D      	GOTO       45
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A5      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;Timer0_Interrupt.c,4 :: 		void interrupt() {
;Timer0_Interrupt.c,5 :: 		if (TMR0IF_bit) {
0x000B	0x1D0B      	BTFSS      TMR0IF_bit, BitPos(TMR0IF_bit+0)
0x000C	0x2813      	GOTO       L_interrupt0
;Timer0_Interrupt.c,6 :: 		cnt++;                 // increment counter
0x000D	0x0AA2      	INCF       _cnt, 1
0x000E	0x1903      	BTFSC      STATUS, 2
0x000F	0x0AA3      	INCF       _cnt+1, 1
;Timer0_Interrupt.c,7 :: 		TMR0IF_bit = 0;        // clear TMR0IF
0x0010	0x110B      	BCF        TMR0IF_bit, BitPos(TMR0IF_bit+0)
;Timer0_Interrupt.c,8 :: 		TMR0   = 96;
0x0011	0x3060      	MOVLW      96
0x0012	0x0081      	MOVWF      TMR0
;Timer0_Interrupt.c,9 :: 		}
L_interrupt0:
;Timer0_Interrupt.c,10 :: 		}
L_end_interrupt:
L__interrupt6:
0x0013	0x0825      	MOVF       ___savePCLATH, 0
0x0014	0x008A      	MOVWF      PCLATH
0x0015	0x0E24      	SWAPF      ___saveSTATUS, 0
0x0016	0x0083      	MOVWF      STATUS
0x0017	0x0EFF      	SWAPF      R15, 1
0x0018	0x0E7F      	SWAPF      R15, 0
0x0019	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x001A	0x1283      	BCF        STATUS, 5
0x001B	0x1303      	BCF        STATUS, 6
0x001C	0x0821      	MOVF       ___DoICPAddr+1, 0
0x001D	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x001E	0x0820      	MOVF       ___DoICPAddr, 0
0x001F	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0020	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0021	0x201A      	CALL       _____DoICP
0x0022	0x118A      	BCF        PCLATH, 3
0x0023	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0024	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0025	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0026	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0027	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0028	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0029	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x002A	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x002B	0x2821      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x002C	0x0008      	RETURN
; end of ___CC2DW
_main:
;Timer0_Interrupt.c,12 :: 		void main() {
;Timer0_Interrupt.c,13 :: 		OPTION_REG = 0x84;       // Assign prescaler to TMR0
0x002D	0x3084      	MOVLW      132
0x002E	0x1683      	BSF        STATUS, 5
0x002F	0x1303      	BCF        STATUS, 6
0x0030	0x0081      	MOVWF      OPTION_REG
;Timer0_Interrupt.c,14 :: 		ANSEL  = 0;              // Configure AN pins as digital
0x0031	0x1703      	BSF        STATUS, 6
0x0032	0x0188      	CLRF       ANSEL
;Timer0_Interrupt.c,15 :: 		ANSELH = 0;
0x0033	0x0189      	CLRF       ANSELH
;Timer0_Interrupt.c,16 :: 		C1ON_bit = 0;            // Disable comparators
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x1387      	BCF        C1ON_bit, BitPos(C1ON_bit+0)
;Timer0_Interrupt.c,17 :: 		C2ON_bit = 0;
0x0036	0x1388      	BCF        C2ON_bit, BitPos(C2ON_bit+0)
;Timer0_Interrupt.c,18 :: 		TRISB = 0;               // PORTB is output
0x0037	0x1683      	BSF        STATUS, 5
0x0038	0x1303      	BCF        STATUS, 6
0x0039	0x0186      	CLRF       TRISB
;Timer0_Interrupt.c,19 :: 		PORTB = 0xFF;            // Initialize PORTB
0x003A	0x30FF      	MOVLW      255
0x003B	0x1283      	BCF        STATUS, 5
0x003C	0x0086      	MOVWF      PORTB
;Timer0_Interrupt.c,20 :: 		TMR0  = 96;              // Timer0 initial value
0x003D	0x3060      	MOVLW      96
0x003E	0x0081      	MOVWF      TMR0
;Timer0_Interrupt.c,21 :: 		INTCON = 0xA0;           // Enable TMRO interrupt
0x003F	0x30A0      	MOVLW      160
0x0040	0x008B      	MOVWF      INTCON
;Timer0_Interrupt.c,22 :: 		cnt = 0;                 // Initialize cnt
0x0041	0x01A2      	CLRF       _cnt
0x0042	0x01A3      	CLRF       _cnt+1
;Timer0_Interrupt.c,24 :: 		do {
L_main1:
;Timer0_Interrupt.c,25 :: 		if (cnt >= 400) {
0x0043	0x3001      	MOVLW      1
0x0044	0x0223      	SUBWF      _cnt+1, 0
0x0045	0x1D03      	BTFSS      STATUS, 2
0x0046	0x2849      	GOTO       L__main8
0x0047	0x3090      	MOVLW      144
0x0048	0x0222      	SUBWF      _cnt, 0
L__main8:
0x0049	0x1C03      	BTFSS      STATUS, 0
0x004A	0x284E      	GOTO       L_main4
;Timer0_Interrupt.c,26 :: 		PORTB = ~PORTB;      // Toggle PORTB LEDs
0x004B	0x0986      	COMF       PORTB, 1
;Timer0_Interrupt.c,27 :: 		cnt = 0;             // Reset cnt
0x004C	0x01A2      	CLRF       _cnt
0x004D	0x01A3      	CLRF       _cnt+1
;Timer0_Interrupt.c,28 :: 		}
L_main4:
;Timer0_Interrupt.c,29 :: 		} while(1);
0x004E	0x2843      	GOTO       L_main1
;Timer0_Interrupt.c,30 :: 		}
L_end_main:
0x004F	0x284F      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [22]    _interrupt
0x001A       [7]    _____DoICP
0x0021      [12]    ___CC2DW
0x002D      [35]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [0]    TMR0IF_bit
0x000B       [1]    INTCON
0x0020       [2]    ___DoICPAddr
0x0022       [2]    _cnt
0x0024       [1]    ___saveSTATUS
0x0025       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0107       [0]    C1ON_bit
0x0108       [0]    C2ON_bit
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
